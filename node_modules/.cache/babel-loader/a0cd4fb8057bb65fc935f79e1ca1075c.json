{"ast":null,"code":"var _jsxFileName = \"/home/mateus/sd-014-b-project-trybetunes/src/pages/Album.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Header from '../components/Header';\nimport Loading from '../components/Loading';\nimport getMusics from '../services/musicsAPI';\nimport MusicCard from '../components/MusicCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Album extends Component {\n  constructor() {\n    super();\n\n    this.fetchMusicsUrl = () => {\n      const {\n        match: {\n          params: {\n            id\n          }\n        }\n      } = this.props;\n      this.setState({\n        loading: true\n      }, async () => {\n        const data = await getMusics(id);\n        this.setState({\n          loading: false,\n          resolve: true,\n          data\n        });\n      });\n    };\n\n    this.musicRender = () => {\n      const {\n        resolve,\n        data\n      } = this.state;\n\n      if (resolve) {\n        return /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"music-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: data[0].artworkUrl100,\n              alt: data[0].collectionName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n              \"data-testid\": \"album-name\",\n              children: data[0].collectionName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              \"data-testid\": \"artist-name\",\n              children: data[0].artistName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: data.slice(1).map(musics => /*#__PURE__*/_jsxDEV(MusicCard, {\n              musics: music\n            }, music.trackNumber, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 15\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 9\n        }, this);\n      }\n    };\n\n    this.state = {\n      loading: false,\n      resolve: false,\n      data: []\n    };\n  }\n\n  componentDidMount() {\n    this.fetchMusicsUrl();\n  }\n\n  render() {\n    const {\n      loading\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      \"data-testid\": \"page-album\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }, this) : this.musicRender()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nAlbum.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string\n    })\n  }).isRequired\n};\nexport default Album;","map":{"version":3,"sources":["/home/mateus/sd-014-b-project-trybetunes/src/pages/Album.js"],"names":["React","Component","PropTypes","Header","Loading","getMusics","MusicCard","Album","constructor","fetchMusicsUrl","match","params","id","props","setState","loading","data","resolve","musicRender","state","artworkUrl100","collectionName","artistName","slice","map","musics","music","trackNumber","componentDidMount","render","propTypes","shape","string","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;;;AAEA,MAAMC,KAAN,SAAoBN,SAApB,CAA8B;AAC5BO,EAAAA,WAAW,GAAG;AACZ;;AADY,SAadC,cAbc,GAaG,MAAM;AACrB,YAAM;AAAEC,QAAAA,KAAK,EAAE;AAAEC,UAAAA,MAAM,EAAE;AAAEC,YAAAA;AAAF;AAAV;AAAT,UAAgC,KAAKC,KAA3C;AAEA,WAAKC,QAAL,CAAc;AACZC,QAAAA,OAAO,EAAE;AADG,OAAd,EAGA,YAAY;AACV,cAAMC,IAAI,GAAG,MAAMX,SAAS,CAACO,EAAD,CAA5B;AAEA,aAAKE,QAAL,CAAc;AACZC,UAAAA,OAAO,EAAE,KADG;AAEZE,UAAAA,OAAO,EAAE,IAFG;AAGZD,UAAAA;AAHY,SAAd;AAKD,OAXD;AAYD,KA5Ba;;AAAA,SA8BdE,WA9Bc,GA8BA,MAAM;AAClB,YAAM;AAAED,QAAAA,OAAF;AAAWD,QAAAA;AAAX,UAAoB,KAAKG,KAA/B;;AAEA,UAAIF,OAAJ,EAAa;AACX,4BACE;AAAS,UAAA,SAAS,EAAC,YAAnB;AAAA,kCACE;AAAA,oCACE;AACE,cAAA,GAAG,EAAGD,IAAI,CAAC,CAAD,CAAJ,CAAQI,aADhB;AAEE,cAAA,GAAG,EAAGJ,IAAI,CAAC,CAAD,CAAJ,CAAQK;AAFhB;AAAA;AAAA;AAAA;AAAA,oBADF,eAKE;AAAI,6BAAY,YAAhB;AAAA,wBAA8BL,IAAI,CAAC,CAAD,CAAJ,CAAQK;AAAtC;AAAA;AAAA;AAAA;AAAA,oBALF,eAME;AAAG,6BAAY,aAAf;AAAA,wBAA8BL,IAAI,CAAC,CAAD,CAAJ,CAAQM;AAAtC;AAAA;AAAA;AAAA;AAAA,oBANF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eASE;AAAA,sBACGN,IAAI,CAACO,KAAL,CAAW,CAAX,EAAcC,GAAd,CAAmBC,MAAD,iBACjB,QAAC,SAAD;AAEE,cAAA,MAAM,EAAGC;AAFX,eACQA,KAAK,CAACC,WADd;AAAA;AAAA;AAAA;AAAA,oBADD;AADH;AAAA;AAAA;AAAA;AAAA,kBATF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF;AAoBD;AACF,KAvDa;;AAEZ,SAAKR,KAAL,GAAa;AACXJ,MAAAA,OAAO,EAAE,KADE;AAEXE,MAAAA,OAAO,EAAE,KAFE;AAGXD,MAAAA,IAAI,EAAE;AAHK,KAAb;AAKD;;AAEDY,EAAAA,iBAAiB,GAAG;AAClB,SAAKnB,cAAL;AACD;;AA8CDoB,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEd,MAAAA;AAAF,QAAc,KAAKI,KAAzB;AACA,wBACE;AAAK,qBAAY,YAAjB;AAAA,8BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADF,EAEIJ,OAAO,gBAAG,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cAAH,GAAiB,KAAKG,WAAL,EAF5B;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD;;AAlE2B;;AAqE9BX,KAAK,CAACuB,SAAN,GAAkB;AAChBpB,EAAAA,KAAK,EAAER,SAAS,CAAC6B,KAAV,CAAgB;AACrBpB,IAAAA,MAAM,EAAET,SAAS,CAAC6B,KAAV,CAAgB;AACtBnB,MAAAA,EAAE,EAAEV,SAAS,CAAC8B;AADQ,KAAhB;AADa,GAAhB,EAIJC;AALa,CAAlB;AAQA,eAAe1B,KAAf","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Header from '../components/Header';\nimport Loading from '../components/Loading';\nimport getMusics from '../services/musicsAPI';\nimport MusicCard from '../components/MusicCard';\n\nclass Album extends Component {\n  constructor() {\n    super();\n    this.state = {\n      loading: false,\n      resolve: false,\n      data: [],\n    };\n  }\n\n  componentDidMount() {\n    this.fetchMusicsUrl();\n  }\n\n  fetchMusicsUrl = () => {\n    const { match: { params: { id } } } = this.props;\n\n    this.setState({\n      loading: true,\n    },\n    async () => {\n      const data = await getMusics(id);\n\n      this.setState({\n        loading: false,\n        resolve: true,\n        data,\n      });\n    });\n  }\n\n  musicRender = () => {\n    const { resolve, data } = this.state;\n\n    if (resolve) {\n      return (\n        <section className=\"music-card\">\n          <div>\n            <img\n              src={ data[0].artworkUrl100 }\n              alt={ data[0].collectionName }\n            />\n            <h4 data-testid=\"album-name\">{data[0].collectionName}</h4>\n            <p data-testid=\"artist-name\">{data[0].artistName}</p>\n          </div>\n          <div>\n            {data.slice(1).map((musics) => (\n              <MusicCard\n                key={ music.trackNumber }\n                musics={ music }\n              />\n            ))}\n          </div>\n        </section>\n      );\n    }\n  }\n\n  render() {\n    const { loading } = this.state;\n    return (\n      <div data-testid=\"page-album\">\n        <Header />\n        { loading ? <Loading /> : this.musicRender() }\n      </div>\n    );\n  }\n}\n\nAlbum.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string,\n    }),\n  }).isRequired,\n};\n\nexport default Album;\n"]},"metadata":{},"sourceType":"module"}