{"ast":null,"code":"var _jsxFileName = \"/home/mateus/sd-014-b-project-trybetunes/src/pages/Album.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport getMusics from '../services/musicsAPI';\nimport Header from '../components/Header';\nimport MusicCard from '../components/MusicCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Album extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      musicList: []\n    };\n    this.fetchMusicUrl = this.fetchMusicUrl.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchMusicUrl();\n  }\n\n  async fetchMusicUrl() {\n    const {\n      match: {\n        params: {\n          id\n        }\n      }\n    } = this.props;\n    const responseMusics = await getMusics(id);\n    this.setState({\n      musicList: responseMusics\n    });\n  }\n\n  render() {\n    const {\n      musicList,\n      artistName,\n      collectioName,\n      collectionIMG\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        \"data-testid\": \"page-album\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Album\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: collectionIMG,\n            alt: \"album\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            \"data-testid\": \"artist-name\",\n            children: artistName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n            \"data-testid\": \"album-name\",\n            children: collectioName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this), musicList.map((music, index) => /*#__PURE__*/_jsxDEV(MusicCard, {\n            music: music\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 38\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nAlbum.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string.isRequired\n    })\n  }).isRequired\n};\nexport default Album;","map":{"version":3,"sources":["/home/mateus/sd-014-b-project-trybetunes/src/pages/Album.js"],"names":["React","PropTypes","getMusics","Header","MusicCard","Album","Component","constructor","state","musicList","fetchMusicUrl","bind","componentDidMount","match","params","id","props","responseMusics","setState","render","artistName","collectioName","collectionIMG","map","music","index","propTypes","shape","string","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;;;;AAEA,MAAMC,KAAN,SAAoBL,KAAK,CAACM,SAA1B,CAAoC;AAClCC,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAE;AADA,KAAb;AAGA,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CAArB;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKF,aAAL;AACD;;AAEkB,QAAbA,aAAa,GAAG;AACpB,UAAM;AAAEG,MAAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAE;AAAEC,UAAAA;AAAF;AAAV;AAAT,QAAgC,KAAKC,KAA3C;AACA,UAAMC,cAAc,GAAG,MAAMf,SAAS,CAACa,EAAD,CAAtC;AACA,SAAKG,QAAL,CAAc;AACZT,MAAAA,SAAS,EAAEQ;AADC,KAAd;AAGD;;AAEDE,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEV,MAAAA,SAAF;AAAaW,MAAAA,UAAb;AAAyBC,MAAAA,aAAzB;AAAwCC,MAAAA;AAAxC,QAA0D,KAAKd,KAArE;AACA,wBACE;AAAA,8BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,uBAAY,YAAjB;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,kCACE;AAAK,YAAA,GAAG,EAAGc,aAAX;AAA2B,YAAA,GAAG,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAI,2BAAY,aAAhB;AAAA,sBAA+BF;AAA/B;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAI,2BAAY,YAAhB;AAAA,sBAA8BC;AAA9B;AAAA;AAAA;AAAA;AAAA,kBAHF,EAIIZ,SAAS,CACRc,GADD,CACK,CAACC,KAAD,EAAQC,KAAR,kBAAkB,QAAC,SAAD;AAAyB,YAAA,KAAK,EAAGD;AAAjC,aAAiBC,KAAjB;AAAA;AAAA;AAAA;AAAA,kBADvB,CAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA,oBADF;AAeD;;AAtCiC;;AAyCpCpB,KAAK,CAACqB,SAAN,GAAkB;AAChBb,EAAAA,KAAK,EAAEZ,SAAS,CAAC0B,KAAV,CAAgB;AACrBb,IAAAA,MAAM,EAAEb,SAAS,CAAC0B,KAAV,CAAgB;AACtBZ,MAAAA,EAAE,EAAEd,SAAS,CAAC2B,MAAV,CAAiBC;AADC,KAAhB;AADa,GAAhB,EAIJA;AALa,CAAlB;AAQA,eAAexB,KAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport getMusics from '../services/musicsAPI';\nimport Header from '../components/Header';\nimport MusicCard from '../components/MusicCard';\n\nclass Album extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      musicList: [],\n    };\n    this.fetchMusicUrl = this.fetchMusicUrl.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchMusicUrl();\n  }\n\n  async fetchMusicUrl() {\n    const { match: { params: { id } } } = this.props;\n    const responseMusics = await getMusics(id);\n    this.setState({\n      musicList: responseMusics,\n    });\n  }\n\n  render() {\n    const { musicList, artistName, collectioName, collectionIMG } = this.state;\n    return (\n      <>\n        <Header />\n        <div data-testid=\"page-album\">\n          <h2>Album</h2>\n          <div>\n            <img src={ collectionIMG } alt=\"album\" />\n            <h4 data-testid=\"artist-name\">{artistName}</h4>\n            <h6 data-testid=\"album-name\">{collectioName}</h6>\n            { musicList\n              .map((music, index) => <MusicCard key={ index } music={ music } />)}\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nAlbum.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    }),\n  }).isRequired,\n};\n\nexport default Album;\n"]},"metadata":{},"sourceType":"module"}