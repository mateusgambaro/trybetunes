{"ast":null,"code":"var _jsxFileName = \"/home/mateus/sd-014-b-project-trybetunes/src/pages/Card.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Card extends React.Component {\n  render() {\n    const {\n      album: {\n        artworkUrl100,\n        collectionName,\n        artistName,\n        collectionId\n      }\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: artworkUrl100,\n        alt: \"Album Art\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: collectionName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: artistName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: `/album/${collectionId}`,\n        \"data-testid\": `link-to-album-${collectionId}`,\n        children: \"More Info\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nCard.propTypes = {\n  album: PropTypes.shape({\n    artistId: PropTypes.number,\n    artistName: PropTypes.string,\n    collectionId: PropTypes.number,\n    collectionName: PropTypes.string,\n    collectionPrice: PropTypes.number,\n    artworkUrl100: PropTypes.string,\n    releaseDate: PropTypes.string,\n    trackCount: PropTypes.number\n  }).isRequired\n};\nexport default Card;","map":{"version":3,"sources":["/home/mateus/sd-014-b-project-trybetunes/src/pages/Card.js"],"names":["React","PropTypes","Link","Card","Component","render","album","artworkUrl100","collectionName","artistName","collectionId","props","propTypes","shape","artistId","number","string","collectionPrice","releaseDate","trackCount","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,QAAqB,kBAArB;;;AAEA,MAAMC,IAAN,SAAmBH,KAAK,CAACI,SAAzB,CAAmC;AACjCC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,KAAK,EAAE;AACbC,QAAAA,aADa;AAEbC,QAAAA,cAFa;AAGbC,QAAAA,UAHa;AAIbC,QAAAA;AAJa;AAAT,QAIe,KAAKC,KAJ1B;AAKA,wBACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACE;AAAK,QAAA,GAAG,EAAGJ,aAAX;AAA2B,QAAA,GAAG,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBACIC;AADJ;AAAA;AAAA;AAAA;AAAA,cAFF,eAKE;AAAA,kBAAIC;AAAJ;AAAA;AAAA;AAAA;AAAA,cALF,eAME,QAAC,IAAD;AACE,QAAA,EAAE,EAAI,UAASC,YAAa,EAD9B;AAEE,uBAAe,iBAAgBA,YAAa,EAF9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAeD;;AAtBgC;;AAwBnCP,IAAI,CAACS,SAAL,GAAiB;AACfN,EAAAA,KAAK,EAAEL,SAAS,CAACY,KAAV,CAAgB;AACrBC,IAAAA,QAAQ,EAAEb,SAAS,CAACc,MADC;AAErBN,IAAAA,UAAU,EAAER,SAAS,CAACe,MAFD;AAGrBN,IAAAA,YAAY,EAAET,SAAS,CAACc,MAHH;AAIrBP,IAAAA,cAAc,EAAEP,SAAS,CAACe,MAJL;AAKrBC,IAAAA,eAAe,EAAEhB,SAAS,CAACc,MALN;AAMrBR,IAAAA,aAAa,EAAEN,SAAS,CAACe,MANJ;AAOrBE,IAAAA,WAAW,EAAEjB,SAAS,CAACe,MAPF;AAQrBG,IAAAA,UAAU,EAAElB,SAAS,CAACc;AARD,GAAhB,EASJK;AAVY,CAAjB;AAaA,eAAejB,IAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nclass Card extends React.Component {\n  render() {\n    const { album: {\n      artworkUrl100,\n      collectionName,\n      artistName,\n      collectionId } } = this.props;\n    return (\n      <div className=\"card\">\n        <img src={ artworkUrl100 } alt=\"Album Art\" />\n        <h3>\n          { collectionName}\n        </h3>\n        <p>{artistName}</p>\n        <Link\n          to={ `/album/${collectionId}` }\n          data-testid={ `link-to-album-${collectionId}` }\n        >\n          More Info\n        </Link>\n      </div>\n    );\n  }\n}\nCard.propTypes = {\n  album: PropTypes.shape({\n    artistId: PropTypes.number,\n    artistName: PropTypes.string,\n    collectionId: PropTypes.number,\n    collectionName: PropTypes.string,\n    collectionPrice: PropTypes.number,\n    artworkUrl100: PropTypes.string,\n    releaseDate: PropTypes.string,\n    trackCount: PropTypes.number,\n  }).isRequired,\n};\n\nexport default Card;\n"]},"metadata":{},"sourceType":"module"}