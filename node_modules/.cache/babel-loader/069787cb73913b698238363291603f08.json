{"ast":null,"code":"var _jsxFileName = \"/home/mateus/sd-014-b-project-trybetunes/src/components/MusicCard.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass MusicCard extends React.Component {\n  render() {\n    const {\n      music: {\n        trackName,\n        previewUrl,\n        kind,\n        artistName,\n        collectionName\n      }\n    } = this.props;\n\n    if (kind === undefined) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          \"data-testid\": \"artist-name\",\n          children: artistName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          \"data-testid\": \"album-name\",\n          children: collectionName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true);\n    }\n\n    if (kind === 'song') {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: trackName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n          \"data-testid\": \"audio-component\",\n          src: previewUrl,\n          controls: true,\n          children: [/*#__PURE__*/_jsxDEV(\"track\", {\n            kind: \"captions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 13\n          }, this), \"O seu navegador n\\xE3o suporta o elemento\", ' ', /*#__PURE__*/_jsxDEV(\"code\", {\n            children: \"audio\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 13\n          }, this), \".\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true);\n    }\n  }\n\n}\n\nMusicCard.propTypes = {\n  music: PropTypes.shape({\n    trackName: PropTypes.string,\n    previewUrl: PropTypes.string,\n    kind: PropTypes.string,\n    artistName: PropTypes.string,\n    collectionName: PropTypes.string\n  }).isRequired\n};\nexport default MusicCard;","map":{"version":3,"sources":["/home/mateus/sd-014-b-project-trybetunes/src/components/MusicCard.js"],"names":["React","PropTypes","MusicCard","Component","render","music","trackName","previewUrl","kind","artistName","collectionName","props","undefined","propTypes","shape","string","isRequired"],"mappings":";AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;;AAEA,MAAMC,SAAN,SAAwBF,KAAK,CAACG,SAA9B,CAAwC;AACtCC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,KAAK,EAAE;AACbC,QAAAA,SADa;AACFC,QAAAA,UADE;AACUC,QAAAA,IADV;AACgBC,QAAAA,UADhB;AAC4BC,QAAAA;AAD5B;AAAT,QAC0D,KAAKC,KADrE;;AAEA,QAAIH,IAAI,KAAKI,SAAb,EAAwB;AACtB,0BACE;AAAA,gCACE;AAAI,yBAAY,aAAhB;AAAA,oBAA+BH;AAA/B;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAI,yBAAY,YAAhB;AAAA,oBAA8BC;AAA9B;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA,sBADF;AAMD;;AACD,QAAIF,IAAI,KAAK,MAAb,EAAqB;AACnB,0BACE;AAAA,gCACE;AAAA,oBAAIF;AAAJ;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAO,yBAAY,iBAAnB;AAAqC,UAAA,GAAG,EAAGC,UAA3C;AAAwD,UAAA,QAAQ,MAAhE;AAAA,kCACE;AAAO,YAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,kBADF,+CAGG,GAHH,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA,sBADF;AAYD;AACF;;AA1BqC;;AA6BxCL,SAAS,CAACW,SAAV,GAAsB;AACpBR,EAAAA,KAAK,EAAEJ,SAAS,CAACa,KAAV,CAAgB;AACrBR,IAAAA,SAAS,EAAEL,SAAS,CAACc,MADA;AAErBR,IAAAA,UAAU,EAAEN,SAAS,CAACc,MAFD;AAGrBP,IAAAA,IAAI,EAAEP,SAAS,CAACc,MAHK;AAIrBN,IAAAA,UAAU,EAAER,SAAS,CAACc,MAJD;AAKrBL,IAAAA,cAAc,EAAET,SAAS,CAACc;AALL,GAAhB,EAMJC;AAPiB,CAAtB;AAUA,eAAed,SAAf","sourcesContent":["\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nclass MusicCard extends React.Component {\n  render() {\n    const { music: {\n      trackName, previewUrl, kind, artistName, collectionName } } = this.props;\n    if (kind === undefined) {\n      return (\n        <>\n          <h2 data-testid=\"artist-name\">{artistName}</h2>\n          <h3 data-testid=\"album-name\">{collectionName}</h3>\n        </>\n      );\n    }\n    if (kind === 'song') {\n      return (\n        <>\n          <p>{trackName}</p>\n          <audio data-testid=\"audio-component\" src={ previewUrl } controls>\n            <track kind=\"captions\" />\n            O seu navegador n√£o suporta o elemento\n            {' '}\n            <code>audio</code>\n            .\n          </audio>\n        </>\n      );\n    }\n  }\n}\n\nMusicCard.propTypes = {\n  music: PropTypes.shape({\n    trackName: PropTypes.string,\n    previewUrl: PropTypes.string,\n    kind: PropTypes.string,\n    artistName: PropTypes.string,\n    collectionName: PropTypes.string,\n  }).isRequired,\n};\n\nexport default MusicCard;\n"]},"metadata":{},"sourceType":"module"}