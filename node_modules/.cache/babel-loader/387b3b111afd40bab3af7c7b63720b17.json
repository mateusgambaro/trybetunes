{"ast":null,"code":"var _jsxFileName = \"/home/mateus/sd-014-b-project-trybetunes/src/pages/Album.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Header from '../components/Header';\nimport MusicCard from '../components/MusicCard';\nimport getMusics from '../services/musicsAPI';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Album extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      musicList: []\n    };\n    this.showMusics = this.showMusics.bind(this);\n  }\n\n  componentDidMount() {\n    this.showMusics();\n  }\n\n  async showMusics() {\n    const {\n      match: {\n        params: {\n          id\n        }\n      }\n    } = this.props;\n    const getMusicResponse = await getMusics(id);\n    this.setState({\n      musicList: getMusicResponse\n    });\n  }\n\n  render() {\n    const {\n      musicList\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      \"data-testid\": \"page-album\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), musicList.map(music => /*#__PURE__*/_jsxDEV(MusicCard, {\n        music: music\n      }, music.trackId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 37\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nAlbum.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string\n    })\n  }).isRequired\n};\nexport default Album;","map":{"version":3,"sources":["/home/mateus/sd-014-b-project-trybetunes/src/pages/Album.js"],"names":["React","PropTypes","Header","MusicCard","getMusics","Album","Component","constructor","state","musicList","showMusics","bind","componentDidMount","match","params","id","props","getMusicResponse","setState","render","map","music","trackId","propTypes","shape","string","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;;;AAEA,MAAMC,KAAN,SAAoBL,KAAK,CAACM,SAA1B,CAAoC;AAClCC,EAAAA,WAAW,GAAG;AACZ;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAE;AADA,KAAb;AAIA,SAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,CAAlB;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKF,UAAL;AACD;;AAEe,QAAVA,UAAU,GAAG;AACjB,UAAM;AAAEG,MAAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAE;AAAEC,UAAAA;AAAF;AAAV;AAAT,QAAgC,KAAKC,KAA3C;AACA,UAAMC,gBAAgB,GAAG,MAAMb,SAAS,CAACW,EAAD,CAAxC;AACA,SAAKG,QAAL,CAAc;AAAET,MAAAA,SAAS,EAAEQ;AAAb,KAAd;AACD;;AAEDE,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEV,MAAAA;AAAF,QAAgB,KAAKD,KAA3B;AACA,wBACE;AAAK,qBAAY,YAAjB;AAAA,8BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADF,EAEIC,SAAS,CAACW,GAAV,CAAeC,KAAD,iBAAY,QAAC,SAAD;AAE1B,QAAA,KAAK,EAAGA;AAFkB,SACpBA,KAAK,CAACC,OADc;AAAA;AAAA;AAAA;AAAA,cAA1B,CAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AASD;;AAhCiC;;AAmCpCjB,KAAK,CAACkB,SAAN,GAAkB;AAChBV,EAAAA,KAAK,EAAEZ,SAAS,CAACuB,KAAV,CAAgB;AACrBV,IAAAA,MAAM,EAAEb,SAAS,CAACuB,KAAV,CAAgB;AACtBT,MAAAA,EAAE,EAAEd,SAAS,CAACwB;AADQ,KAAhB;AADa,GAAhB,EAIJC;AALa,CAAlB;AAQA,eAAerB,KAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Header from '../components/Header';\nimport MusicCard from '../components/MusicCard';\nimport getMusics from '../services/musicsAPI';\n\nclass Album extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      musicList: [],\n    };\n\n    this.showMusics = this.showMusics.bind(this);\n  }\n\n  componentDidMount() {\n    this.showMusics();\n  }\n\n  async showMusics() {\n    const { match: { params: { id } } } = this.props;\n    const getMusicResponse = await getMusics(id);\n    this.setState({ musicList: getMusicResponse });\n  }\n\n  render() {\n    const { musicList } = this.state;\n    return (\n      <div data-testid=\"page-album\">\n        <Header />\n        { musicList.map((music) => (<MusicCard\n          key={ music.trackId }\n          music={ music }\n        />))}\n      </div>\n    );\n  }\n}\n\nAlbum.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string,\n    }),\n  }).isRequired,\n};\n\nexport default Album;\n"]},"metadata":{},"sourceType":"module"}