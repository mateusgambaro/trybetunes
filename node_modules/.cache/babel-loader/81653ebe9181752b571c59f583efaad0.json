{"ast":null,"code":"var _jsxFileName = \"/home/mateus/sd-014-b-project-trybetunes/src/components/MusicCard.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { addSong } from '../services/favoriteSongsAPI';\nimport Loading from './Loading';\nimport '../stylesheets/MusicCard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass MusicCard extends Component {\n  constructor() {\n    super();\n    this.state = {\n      loading: false,\n      checked: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  async handleChange() {\n    const {\n      musics\n    } = this.props;\n    this.setState({\n      loading: true\n    });\n    await addSong(musics);\n    this.setState({\n      loading: false,\n      checked: true\n    });\n  }\n\n  render() {\n    const {\n      musics: {\n        trackName,\n        previewUrl,\n        trackId\n      }\n    } = this.props;\n    const {\n      loading,\n      checked\n    } = this.state;\n    if (loading) return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 25\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"track-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"track\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: trackName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n          \"data-testid\": \"audio-component\",\n          src: previewUrl,\n          controls: true,\n          children: [/*#__PURE__*/_jsxDEV(\"track\", {\n            kind: \"captions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this), \"O seu navegador n\\xE3o suporta o elemento\", /*#__PURE__*/_jsxDEV(\"code\", {\n            children: \"audio\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this), \".\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        \"data-testid\": `checkbox-music-${trackId}`,\n        type: \"checkbox\",\n        id: trackId,\n        onChange: this.handleChange,\n        checked: checked\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nMusicCard.propTypes = {\n  musics: PropTypes.shape({\n    trackName: PropTypes.string,\n    previewUrl: PropTypes.string,\n    trackId: PropTypes.number\n  }).isRequired\n};\nexport default MusicCard;","map":{"version":3,"sources":["/home/mateus/sd-014-b-project-trybetunes/src/components/MusicCard.js"],"names":["React","Component","PropTypes","addSong","Loading","MusicCard","constructor","state","loading","checked","handleChange","bind","musics","props","setState","render","trackName","previewUrl","trackId","propTypes","shape","string","number","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,8BAAxB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAO,8BAAP;;;AAEA,MAAMC,SAAN,SAAwBJ,SAAxB,CAAkC;AAChCK,EAAAA,WAAW,GAAG;AACZ;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE,KADE;AAEXC,MAAAA,OAAO,EAAE;AAFE,KAAb;AAIA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AAEiB,QAAZD,YAAY,GAAG;AACnB,UAAM;AAAEE,MAAAA;AAAF,QAAa,KAAKC,KAAxB;AACA,SAAKC,QAAL,CAAc;AAAEN,MAAAA,OAAO,EAAE;AAAX,KAAd;AACA,UAAML,OAAO,CAACS,MAAD,CAAb;AACA,SAAKE,QAAL,CAAc;AAAEN,MAAAA,OAAO,EAAE,KAAX;AAAkBC,MAAAA,OAAO,EAAE;AAA3B,KAAd;AACD;;AAEDM,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEH,MAAAA,MAAM,EAAE;AAAEI,QAAAA,SAAF;AAAaC,QAAAA,UAAb;AAAyBC,QAAAA;AAAzB;AAAV,QAAiD,KAAKL,KAA5D;AACA,UAAM;AAAEL,MAAAA,OAAF;AAAWC,MAAAA;AAAX,QAAuB,KAAKF,KAAlC;AACA,QAAIC,OAAJ,EAAa,oBAAO,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACb,wBACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,gCACE;AAAA,oBAAIQ;AAAJ;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAO,yBAAY,iBAAnB;AAAqC,UAAA,GAAG,EAAGC,UAA3C;AAAwD,UAAA,QAAQ,MAAhE;AAAA,kCACE;AAAO,YAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,kBADF,4DAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAUE;AACE,uBAAe,kBAAiBC,OAAQ,EAD1C;AAEE,QAAA,IAAI,EAAC,UAFP;AAGE,QAAA,EAAE,EAAGA,OAHP;AAIE,QAAA,QAAQ,EAAG,KAAKR,YAJlB;AAKE,QAAA,OAAO,EAAGD;AALZ;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAqBD;;AA3C+B;;AA8ClCJ,SAAS,CAACc,SAAV,GAAsB;AACpBP,EAAAA,MAAM,EAAEV,SAAS,CAACkB,KAAV,CAAgB;AACtBJ,IAAAA,SAAS,EAAEd,SAAS,CAACmB,MADC;AAEtBJ,IAAAA,UAAU,EAAEf,SAAS,CAACmB,MAFA;AAGtBH,IAAAA,OAAO,EAAEhB,SAAS,CAACoB;AAHG,GAAhB,EAILC;AALiB,CAAtB;AAQA,eAAelB,SAAf","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { addSong } from '../services/favoriteSongsAPI';\nimport Loading from './Loading';\nimport '../stylesheets/MusicCard.css';\n\nclass MusicCard extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      loading: false,\n      checked: false,\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  async handleChange() {\n    const { musics } = this.props;\n    this.setState({ loading: true });\n    await addSong(musics);\n    this.setState({ loading: false, checked: true });\n  }\n\n  render() {\n    const { musics: { trackName, previewUrl, trackId } } = this.props;\n    const { loading, checked } = this.state;\n    if (loading) return <Loading />;\n    return (\n      <div className=\"track-card\">\n        <div className=\"track\">\n          <p>{trackName}</p>\n          <audio data-testid=\"audio-component\" src={ previewUrl } controls>\n            <track kind=\"captions\" />\n            O seu navegador n√£o suporta o elemento\n            <code>audio</code>\n            .\n          </audio>\n        </div>\n        <input\n          data-testid={ `checkbox-music-${trackId}` }\n          type=\"checkbox\"\n          id={ trackId }\n          onChange={ this.handleChange }\n          checked={ checked }\n        />\n\n      </div>\n    );\n  }\n}\n\nMusicCard.propTypes = {\n  musics: PropTypes.shape({\n    trackName: PropTypes.string,\n    previewUrl: PropTypes.string,\n    trackId: PropTypes.number,\n  }).isRequired,\n};\n\nexport default MusicCard;\n"]},"metadata":{},"sourceType":"module"}