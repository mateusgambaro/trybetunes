{"ast":null,"code":"var _jsxFileName = \"/home/mateus/sd-014-b-project-trybetunes/src/pages/Album.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Header from '../components/Header';\nimport { getMusics } from '../services/musicsAPI';\nimport MusicCard from '../components/MusicCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Album extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      loading: false,\n      id,\n      namesOfArtists: '',\n      collectionNames: '',\n      musicList: []\n    };\n    this.fetchMusicUrl = this.fetchUrl.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchMusicUrl();\n  }\n\n  async fetchMusicUrl() {\n    const {\n      match: {\n        params: {\n          id\n        }\n      }\n    } = this.props;\n    const musics = await getMusics(id);\n    this.setState({\n      musicList: [...musics],\n      artistName: musics[0].artistName,\n      collectioName: musics[0].collectioName,\n      collectionIMG: musics[0].artworkUrl100\n    });\n  }\n\n  render() {\n    const {\n      loading,\n      musicList,\n      artistName,\n      collectioName,\n      collectionIMG\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        \"data-testid\": \"page-album\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Album\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: collectionIMG,\n            alt: \"album image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            \"data-testid\": \"artist-name\",\n            children: artistName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n            \"data-testid\": \"album-name\",\n            children: collectioName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this), loading && /*#__PURE__*/_jsxDEV(MusicCard, {\n            albumTracks: musicList\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 26\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nAlbum.propTypes = {\n  match: PropTypes.objectOf({\n    params: PropTypes.objectOf({\n      id: PropTypes.string\n    })\n  }).isRequired\n};\nexport default Album;","map":{"version":3,"sources":["/home/mateus/sd-014-b-project-trybetunes/src/pages/Album.js"],"names":["React","PropTypes","Header","getMusics","MusicCard","Album","Component","constructor","state","loading","id","namesOfArtists","collectionNames","musicList","fetchMusicUrl","fetchUrl","bind","componentDidMount","match","params","props","musics","setState","artistName","collectioName","collectionIMG","artworkUrl100","render","propTypes","objectOf","string","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,SAAT,QAA0B,uBAA1B;AACA,OAAOC,SAAP,MAAsB,yBAAtB;;;;AAEA,MAAMC,KAAN,SAAoBL,KAAK,CAACM,SAA1B,CAAoC;AAClCC,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE,KADE;AAEXC,MAAAA,EAFW;AAGXC,MAAAA,cAAc,EAAE,EAHL;AAIXC,MAAAA,eAAe,EAAE,EAJN;AAKXC,MAAAA,SAAS,EAAE;AALA,KAAb;AAOA,SAAKC,aAAL,GAAqB,KAAKC,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAArB;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKH,aAAL;AACD;;AAEkB,QAAbA,aAAa,GAAG;AACpB,UAAM;AAAEI,MAAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAE;AAAET,UAAAA;AAAF;AAAV;AAAT,QAAgC,KAAKU,KAA3C;AACA,UAAMC,MAAM,GAAG,MAAMlB,SAAS,CAACO,EAAD,CAA9B;AACA,SAAKY,QAAL,CAAc;AACZT,MAAAA,SAAS,EAAE,CAAC,GAAGQ,MAAJ,CADC;AAEZE,MAAAA,UAAU,EAAEF,MAAM,CAAC,CAAD,CAAN,CAAUE,UAFV;AAGZC,MAAAA,aAAa,EAAEH,MAAM,CAAC,CAAD,CAAN,CAAUG,aAHb;AAIZC,MAAAA,aAAa,EAAEJ,MAAM,CAAC,CAAD,CAAN,CAAUK;AAJb,KAAd;AAMD;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAElB,MAAAA,OAAF;AAAWI,MAAAA,SAAX;AAAsBU,MAAAA,UAAtB;AAAkCC,MAAAA,aAAlC;AAAiDC,MAAAA;AAAjD,QAAmE,KAAKjB,KAA9E;AACA,wBACE;AAAA,8BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,uBAAY,YAAjB;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,kCACE;AAAK,YAAA,GAAG,EAAGiB,aAAX;AAA2B,YAAA,GAAG,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAI,2BAAY,aAAhB;AAAA,sBAA+BF;AAA/B;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAI,2BAAY,YAAhB;AAAA,sBAA8BC;AAA9B;AAAA;AAAA;AAAA;AAAA,kBAHF,EAIIf,OAAO,iBAAI,QAAC,SAAD;AAAW,YAAA,WAAW,EAAGI;AAAzB;AAAA;AAAA;AAAA;AAAA,kBAJf;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA,oBADF;AAcD;;AA5CiC;;AA+CpCR,KAAK,CAACuB,SAAN,GAAkB;AAChBV,EAAAA,KAAK,EAAEjB,SAAS,CAAC4B,QAAV,CAAmB;AACxBV,IAAAA,MAAM,EAAElB,SAAS,CAAC4B,QAAV,CAAmB;AACzBnB,MAAAA,EAAE,EAAET,SAAS,CAAC6B;AADW,KAAnB;AADgB,GAAnB,EAIJC;AALa,CAAlB;AAQA,eAAe1B,KAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Header from '../components/Header';\nimport { getMusics } from '../services/musicsAPI';\nimport MusicCard from '../components/MusicCard';\n\nclass Album extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      loading: false,\n      id,\n      namesOfArtists: '',\n      collectionNames: '',\n      musicList: [],\n    };\n    this.fetchMusicUrl = this.fetchUrl.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchMusicUrl();\n  }\n\n  async fetchMusicUrl() {\n    const { match: { params: { id } } } = this.props;\n    const musics = await getMusics(id);\n    this.setState({\n      musicList: [...musics],\n      artistName: musics[0].artistName,\n      collectioName: musics[0].collectioName,\n      collectionIMG: musics[0].artworkUrl100,\n    });\n  }\n\n  render() {\n    const { loading, musicList, artistName, collectioName, collectionIMG } = this.state;\n    return (\n      <>\n        <Header />\n        <div data-testid=\"page-album\">\n          <h2>Album</h2>\n          <div>\n            <img src={ collectionIMG } alt=\"album image\" />\n            <h4 data-testid=\"artist-name\">{artistName}</h4>\n            <h6 data-testid=\"album-name\">{collectioName}</h6>\n            { loading && <MusicCard albumTracks={ musicList } />}\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nAlbum.propTypes = {\n  match: PropTypes.objectOf({\n    params: PropTypes.objectOf({\n      id: PropTypes.string,\n    }),\n  }).isRequired,\n};\n\nexport default Album;\n"]},"metadata":{},"sourceType":"module"}